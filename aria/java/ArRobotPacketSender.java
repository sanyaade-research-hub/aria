/*
MobileRobots Advanced Robotics Interface for Applications (ARIA)
Copyright (C) 2004, 2005 ActivMedia Robotics LLC
Copyright (C) 2006, 2007, 2008, 2009 MobileRobots Inc.
Copyright (C) 2010, 2011 Adept Technology, Inc.

     This program is free software; you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
     the Free Software Foundation; either version 2 of the License, or
     (at your option) any later version.

     This program is distributed in the hope that it will be useful,
     but WITHOUT ANY WARRANTY; without even the implied warranty of
     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
     GNU General Public License for more details.

     You should have received a copy of the GNU General Public License
     along with this program; if not, write to the Free Software
     Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

If you wish to redistribute ARIA under different terms, contact 
Adept MobileRobots for information about a commercial version of ARIA at 
robots@mobilerobots.com or 
Adept MobileRobots, 10 Columbia Drive, Amherst, NH 03031; 800-639-9481
*/
/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.36
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.mobilerobots.Aria;

public class ArRobotPacketSender {
  /* (begin code from javabody typemap) */

  private long swigCPtr;
  protected boolean swigCMemOwn;

  /* for internal use by swig only */
  public ArRobotPacketSender(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  /* for internal use by swig only */
  public static long getCPtr(ArRobotPacketSender obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  /* (end code from javabody typemap) */

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if(swigCPtr != 0 && swigCMemOwn) {
      swigCMemOwn = false;
      AriaJavaJNI.delete_ArRobotPacketSender(swigCPtr);
    }
    swigCPtr = 0;
  }

  public ArRobotPacketSender(short sync1, short sync2) {
    this(AriaJavaJNI.new_ArRobotPacketSender__SWIG_0(sync1, sync2), true);
  }

  public ArRobotPacketSender(short sync1) {
    this(AriaJavaJNI.new_ArRobotPacketSender__SWIG_1(sync1), true);
  }

  public ArRobotPacketSender() {
    this(AriaJavaJNI.new_ArRobotPacketSender__SWIG_2(), true);
  }

  public ArRobotPacketSender(ArDeviceConnection deviceConnection, short sync1, short sync2) {
    this(AriaJavaJNI.new_ArRobotPacketSender__SWIG_3(ArDeviceConnection.getCPtr(deviceConnection), deviceConnection, sync1, sync2), true);
  }

  public ArRobotPacketSender(ArDeviceConnection deviceConnection, short sync1) {
    this(AriaJavaJNI.new_ArRobotPacketSender__SWIG_4(ArDeviceConnection.getCPtr(deviceConnection), deviceConnection, sync1), true);
  }

  public ArRobotPacketSender(ArDeviceConnection deviceConnection) {
    this(AriaJavaJNI.new_ArRobotPacketSender__SWIG_5(ArDeviceConnection.getCPtr(deviceConnection), deviceConnection), true);
  }

  public boolean com(short command) {
    return AriaJavaJNI.ArRobotPacketSender_com(swigCPtr, this, command);
  }

  public boolean comInt(short command, short argument) {
    return AriaJavaJNI.ArRobotPacketSender_comInt(swigCPtr, this, command, argument);
  }

  public boolean com2Bytes(short command, char high, char low) {
    return AriaJavaJNI.ArRobotPacketSender_com2Bytes(swigCPtr, this, command, high, low);
  }

  public boolean comStr(short command, String argument) {
    return AriaJavaJNI.ArRobotPacketSender_comStr(swigCPtr, this, command, argument);
  }

  public boolean comStrN(short command, String str, int size) {
    return AriaJavaJNI.ArRobotPacketSender_comStrN(swigCPtr, this, command, str, size);
  }

  public boolean comDataN(short command, String data, int size) {
    return AriaJavaJNI.ArRobotPacketSender_comDataN(swigCPtr, this, command, data, size);
  }

  public void setDeviceConnection(ArDeviceConnection deviceConnection) {
    AriaJavaJNI.ArRobotPacketSender_setDeviceConnection(swigCPtr, this, ArDeviceConnection.getCPtr(deviceConnection), deviceConnection);
  }

  public ArDeviceConnection getDeviceConnection() {
    long cPtr = AriaJavaJNI.ArRobotPacketSender_getDeviceConnection(swigCPtr, this);
    return (cPtr == 0) ? null : new ArDeviceConnection(cPtr, false);
  }

}
