/*
MobileRobots Advanced Robotics Interface for Applications (ARIA)
Copyright (C) 2004, 2005 ActivMedia Robotics LLC
Copyright (C) 2006, 2007, 2008, 2009 MobileRobots Inc.
Copyright (C) 2010, 2011 Adept Technology, Inc.

     This program is free software; you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
     the Free Software Foundation; either version 2 of the License, or
     (at your option) any later version.

     This program is distributed in the hope that it will be useful,
     but WITHOUT ANY WARRANTY; without even the implied warranty of
     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
     GNU General Public License for more details.

     You should have received a copy of the GNU General Public License
     along with this program; if not, write to the Free Software
     Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

If you wish to redistribute ARIA under different terms, contact 
Adept MobileRobots for information about a commercial version of ARIA at 
robots@mobilerobots.com or 
Adept MobileRobots, 10 Columbia Drive, Amherst, NH 03031; 800-639-9481
*/
/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.36
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.mobilerobots.Aria;

public class ArConfigArg {
  /* (begin code from javabody typemap) */

  private long swigCPtr;
  protected boolean swigCMemOwn;

  /* for internal use by swig only */
  public ArConfigArg(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  /* for internal use by swig only */
  public static long getCPtr(ArConfigArg obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  /* (end code from javabody typemap) */

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if(swigCPtr != 0 && swigCMemOwn) {
      swigCMemOwn = false;
      AriaJavaJNI.delete_ArConfigArg(swigCPtr);
    }
    swigCPtr = 0;
  }

  public ArConfigArg() {
    this(AriaJavaJNI.new_ArConfigArg__SWIG_0(), true);
  }

  public ArConfigArg(String name, SWIGTYPE_p_int pointer, String description, int minInt) {
    this(AriaJavaJNI.new_ArConfigArg__SWIG_1(name, SWIGTYPE_p_int.getCPtr(pointer), description, minInt), true);
  }

  public ArConfigArg(String name, SWIGTYPE_p_int pointer, String description) {
    this(AriaJavaJNI.new_ArConfigArg__SWIG_2(name, SWIGTYPE_p_int.getCPtr(pointer), description), true);
  }

  public ArConfigArg(String name, SWIGTYPE_p_int pointer) {
    this(AriaJavaJNI.new_ArConfigArg__SWIG_3(name, SWIGTYPE_p_int.getCPtr(pointer)), true);
  }

  public ArConfigArg(String name, SWIGTYPE_p_short pointer, String description, int minInt) {
    this(AriaJavaJNI.new_ArConfigArg__SWIG_4(name, SWIGTYPE_p_short.getCPtr(pointer), description, minInt), true);
  }

  public ArConfigArg(String name, SWIGTYPE_p_short pointer, String description) {
    this(AriaJavaJNI.new_ArConfigArg__SWIG_5(name, SWIGTYPE_p_short.getCPtr(pointer), description), true);
  }

  public ArConfigArg(String name, SWIGTYPE_p_short pointer) {
    this(AriaJavaJNI.new_ArConfigArg__SWIG_6(name, SWIGTYPE_p_short.getCPtr(pointer)), true);
  }

  public ArConfigArg(String name, SWIGTYPE_p_unsigned_short pointer, String description, int minInt) {
    this(AriaJavaJNI.new_ArConfigArg__SWIG_7(name, SWIGTYPE_p_unsigned_short.getCPtr(pointer), description, minInt), true);
  }

  public ArConfigArg(String name, SWIGTYPE_p_unsigned_short pointer, String description) {
    this(AriaJavaJNI.new_ArConfigArg__SWIG_8(name, SWIGTYPE_p_unsigned_short.getCPtr(pointer), description), true);
  }

  public ArConfigArg(String name, SWIGTYPE_p_unsigned_short pointer) {
    this(AriaJavaJNI.new_ArConfigArg__SWIG_9(name, SWIGTYPE_p_unsigned_short.getCPtr(pointer)), true);
  }

  public ArConfigArg(String name, SWIGTYPE_p_unsigned_char pointer, String description, int minInt) {
    this(AriaJavaJNI.new_ArConfigArg__SWIG_10(name, SWIGTYPE_p_unsigned_char.getCPtr(pointer), description, minInt), true);
  }

  public ArConfigArg(String name, SWIGTYPE_p_unsigned_char pointer, String description) {
    this(AriaJavaJNI.new_ArConfigArg__SWIG_11(name, SWIGTYPE_p_unsigned_char.getCPtr(pointer), description), true);
  }

  public ArConfigArg(String name, SWIGTYPE_p_unsigned_char pointer) {
    this(AriaJavaJNI.new_ArConfigArg__SWIG_12(name, SWIGTYPE_p_unsigned_char.getCPtr(pointer)), true);
  }

  public ArConfigArg(String name, SWIGTYPE_p_double pointer, String description, double minDouble) {
    this(AriaJavaJNI.new_ArConfigArg__SWIG_13(name, SWIGTYPE_p_double.getCPtr(pointer), description, minDouble), true);
  }

  public ArConfigArg(String name, SWIGTYPE_p_double pointer, String description) {
    this(AriaJavaJNI.new_ArConfigArg__SWIG_14(name, SWIGTYPE_p_double.getCPtr(pointer), description), true);
  }

  public ArConfigArg(String name, SWIGTYPE_p_double pointer) {
    this(AriaJavaJNI.new_ArConfigArg__SWIG_15(name, SWIGTYPE_p_double.getCPtr(pointer)), true);
  }

  public ArConfigArg(String name, SWIGTYPE_p_bool pointer) {
    this(AriaJavaJNI.new_ArConfigArg__SWIG_16(name, SWIGTYPE_p_bool.getCPtr(pointer)), true);
  }

  public ArConfigArg(String name, String str, String description, long maxStrLen) {
    this(AriaJavaJNI.new_ArConfigArg__SWIG_17(name, str, description, maxStrLen), true);
  }

  public ArConfigArg(String name, int val, String description, int minInt, int maxInt) {
    this(AriaJavaJNI.new_ArConfigArg__SWIG_18(name, val, description, minInt, maxInt), true);
  }

  public ArConfigArg(String name, int val, String description, int minInt) {
    this(AriaJavaJNI.new_ArConfigArg__SWIG_19(name, val, description, minInt), true);
  }

  public ArConfigArg(String name, int val, String description) {
    this(AriaJavaJNI.new_ArConfigArg__SWIG_20(name, val, description), true);
  }

  public ArConfigArg(String name, int val) {
    this(AriaJavaJNI.new_ArConfigArg__SWIG_21(name, val), true);
  }

  public ArConfigArg(String name, double val, String description, double minDouble, double maxDouble) {
    this(AriaJavaJNI.new_ArConfigArg__SWIG_22(name, val, description, minDouble, maxDouble), true);
  }

  public ArConfigArg(String name, double val, String description, double minDouble) {
    this(AriaJavaJNI.new_ArConfigArg__SWIG_23(name, val, description, minDouble), true);
  }

  public ArConfigArg(String name, double val, String description) {
    this(AriaJavaJNI.new_ArConfigArg__SWIG_24(name, val, description), true);
  }

  public ArConfigArg(String name, double val) {
    this(AriaJavaJNI.new_ArConfigArg__SWIG_25(name, val), true);
  }

  public ArConfigArg(String name, boolean val, String description) {
    this(AriaJavaJNI.new_ArConfigArg__SWIG_26(name, val, description), true);
  }

  public ArConfigArg(String name, boolean val) {
    this(AriaJavaJNI.new_ArConfigArg__SWIG_27(name, val), true);
  }

  public ArConfigArg(String name, ArRetFunctor1_Bool_ArgumentBuilderP setFunctor, SWIGTYPE_p_ArRetFunctorT_std__listT_ArArgumentBuilder_p_t_const_p_t getFunctor, String description) {
    this(AriaJavaJNI.new_ArConfigArg__SWIG_28(name, ArRetFunctor1_Bool_ArgumentBuilderP.getCPtr(setFunctor), setFunctor, SWIGTYPE_p_ArRetFunctorT_std__listT_ArArgumentBuilder_p_t_const_p_t.getCPtr(getFunctor), description), true);
  }

  public ArConfigArg(String str, ArConfigArg.Type type) {
    this(AriaJavaJNI.new_ArConfigArg__SWIG_29(str, type.swigValue()), true);
  }

  public ArConfigArg(String str) {
    this(AriaJavaJNI.new_ArConfigArg__SWIG_30(str), true);
  }

  public ArConfigArg(String name, String str) {
    this(AriaJavaJNI.new_ArConfigArg__SWIG_31(name, str), true);
  }

  public ArConfigArg(ArConfigArg.Type type) {
    this(AriaJavaJNI.new_ArConfigArg__SWIG_32(type.swigValue()), true);
  }

  public ArConfigArg(ArConfigArg arg) {
    this(AriaJavaJNI.new_ArConfigArg__SWIG_33(ArConfigArg.getCPtr(arg), arg), true);
  }

  public ArConfigArg.Type getType() {
    return ArConfigArg.Type.swigToEnum(AriaJavaJNI.ArConfigArg_getType(swigCPtr, this));
  }

  public String getName() {
    return AriaJavaJNI.ArConfigArg_getName(swigCPtr, this);
  }

  public String getDescription() {
    return AriaJavaJNI.ArConfigArg_getDescription(swigCPtr, this);
  }

  public boolean setInt(int val, String errorBuffer, long errorBufferLen, boolean doNotSet) {
    return AriaJavaJNI.ArConfigArg_setInt__SWIG_0(swigCPtr, this, val, errorBuffer, errorBufferLen, doNotSet);
  }

  public boolean setInt(int val, String errorBuffer, long errorBufferLen) {
    return AriaJavaJNI.ArConfigArg_setInt__SWIG_1(swigCPtr, this, val, errorBuffer, errorBufferLen);
  }

  public boolean setInt(int val, String errorBuffer) {
    return AriaJavaJNI.ArConfigArg_setInt__SWIG_2(swigCPtr, this, val, errorBuffer);
  }

  public boolean setInt(int val) {
    return AriaJavaJNI.ArConfigArg_setInt__SWIG_3(swigCPtr, this, val);
  }

  public boolean setDouble(double val, String errorBuffer, long errorBufferLen, boolean doNotSet) {
    return AriaJavaJNI.ArConfigArg_setDouble__SWIG_0(swigCPtr, this, val, errorBuffer, errorBufferLen, doNotSet);
  }

  public boolean setDouble(double val, String errorBuffer, long errorBufferLen) {
    return AriaJavaJNI.ArConfigArg_setDouble__SWIG_1(swigCPtr, this, val, errorBuffer, errorBufferLen);
  }

  public boolean setDouble(double val, String errorBuffer) {
    return AriaJavaJNI.ArConfigArg_setDouble__SWIG_2(swigCPtr, this, val, errorBuffer);
  }

  public boolean setDouble(double val) {
    return AriaJavaJNI.ArConfigArg_setDouble__SWIG_3(swigCPtr, this, val);
  }

  public boolean setBool(boolean val, String errorBuffer, long errorBufferLen, boolean doNotSet) {
    return AriaJavaJNI.ArConfigArg_setBool__SWIG_0(swigCPtr, this, val, errorBuffer, errorBufferLen, doNotSet);
  }

  public boolean setBool(boolean val, String errorBuffer, long errorBufferLen) {
    return AriaJavaJNI.ArConfigArg_setBool__SWIG_1(swigCPtr, this, val, errorBuffer, errorBufferLen);
  }

  public boolean setBool(boolean val, String errorBuffer) {
    return AriaJavaJNI.ArConfigArg_setBool__SWIG_2(swigCPtr, this, val, errorBuffer);
  }

  public boolean setBool(boolean val) {
    return AriaJavaJNI.ArConfigArg_setBool__SWIG_3(swigCPtr, this, val);
  }

  public boolean setString(String str, String errorBuffer, long errorBufferLen, boolean doNotSet) {
    return AriaJavaJNI.ArConfigArg_setString__SWIG_0(swigCPtr, this, str, errorBuffer, errorBufferLen, doNotSet);
  }

  public boolean setString(String str, String errorBuffer, long errorBufferLen) {
    return AriaJavaJNI.ArConfigArg_setString__SWIG_1(swigCPtr, this, str, errorBuffer, errorBufferLen);
  }

  public boolean setString(String str, String errorBuffer) {
    return AriaJavaJNI.ArConfigArg_setString__SWIG_2(swigCPtr, this, str, errorBuffer);
  }

  public boolean setString(String str) {
    return AriaJavaJNI.ArConfigArg_setString__SWIG_3(swigCPtr, this, str);
  }

  public boolean setArgWithFunctor(ArArgumentBuilder argument, String errorBuffer, long errorBufferLen, boolean doNotSet) {
    return AriaJavaJNI.ArConfigArg_setArgWithFunctor__SWIG_0(swigCPtr, this, ArArgumentBuilder.getCPtr(argument), argument, errorBuffer, errorBufferLen, doNotSet);
  }

  public boolean setArgWithFunctor(ArArgumentBuilder argument, String errorBuffer, long errorBufferLen) {
    return AriaJavaJNI.ArConfigArg_setArgWithFunctor__SWIG_1(swigCPtr, this, ArArgumentBuilder.getCPtr(argument), argument, errorBuffer, errorBufferLen);
  }

  public boolean setArgWithFunctor(ArArgumentBuilder argument, String errorBuffer) {
    return AriaJavaJNI.ArConfigArg_setArgWithFunctor__SWIG_2(swigCPtr, this, ArArgumentBuilder.getCPtr(argument), argument, errorBuffer);
  }

  public boolean setArgWithFunctor(ArArgumentBuilder argument) {
    return AriaJavaJNI.ArConfigArg_setArgWithFunctor__SWIG_3(swigCPtr, this, ArArgumentBuilder.getCPtr(argument), argument);
  }

  public int getInt() {
    return AriaJavaJNI.ArConfigArg_getInt(swigCPtr, this);
  }

  public double getDouble() {
    return AriaJavaJNI.ArConfigArg_getDouble(swigCPtr, this);
  }

  public boolean getBool() {
    return AriaJavaJNI.ArConfigArg_getBool(swigCPtr, this);
  }

  public String getString() {
    return AriaJavaJNI.ArConfigArg_getString(swigCPtr, this);
  }

  public ArArgumentBuilderPtrList getArgsWithFunctor() {
    long cPtr = AriaJavaJNI.ArConfigArg_getArgsWithFunctor(swigCPtr, this);
    return (cPtr == 0) ? null : new ArArgumentBuilderPtrList(cPtr, false);
  }

  public void log(boolean verbose) {
    AriaJavaJNI.ArConfigArg_log__SWIG_0(swigCPtr, this, verbose);
  }

  public void log() {
    AriaJavaJNI.ArConfigArg_log__SWIG_1(swigCPtr, this);
  }

  public int getMinInt() {
    return AriaJavaJNI.ArConfigArg_getMinInt(swigCPtr, this);
  }

  public int getMaxInt() {
    return AriaJavaJNI.ArConfigArg_getMaxInt(swigCPtr, this);
  }

  public double getMinDouble() {
    return AriaJavaJNI.ArConfigArg_getMinDouble(swigCPtr, this);
  }

  public double getMaxDouble() {
    return AriaJavaJNI.ArConfigArg_getMaxDouble(swigCPtr, this);
  }

  public ArPriority.Priority getConfigPriority() {
    return ArPriority.Priority.swigToEnum(AriaJavaJNI.ArConfigArg_getConfigPriority(swigCPtr, this));
  }

  public void setConfigPriority(ArPriority.Priority priority) {
    AriaJavaJNI.ArConfigArg_setConfigPriority(swigCPtr, this, priority.swigValue());
  }

  public String getDisplayHint() {
    return AriaJavaJNI.ArConfigArg_getDisplayHint(swigCPtr, this);
  }

  public void setDisplayHint(String hintText) {
    AriaJavaJNI.ArConfigArg_setDisplayHint(swigCPtr, this, hintText);
  }

  public void setIgnoreBounds(boolean ignoreBounds) {
    AriaJavaJNI.ArConfigArg_setIgnoreBounds__SWIG_0(swigCPtr, this, ignoreBounds);
  }

  public void setIgnoreBounds() {
    AriaJavaJNI.ArConfigArg_setIgnoreBounds__SWIG_1(swigCPtr, this);
  }

  public boolean isValueEqual(ArConfigArg other) {
    return AriaJavaJNI.ArConfigArg_isValueEqual(swigCPtr, this, ArConfigArg.getCPtr(other), other);
  }

  public boolean setValue(ArConfigArg source) {
    return AriaJavaJNI.ArConfigArg_setValue(swigCPtr, this, ArConfigArg.getCPtr(source), source);
  }

  public boolean isValueSet() {
    return AriaJavaJNI.ArConfigArg_isValueSet(swigCPtr, this);
  }

  public void clearValueSet() {
    AriaJavaJNI.ArConfigArg_clearValueSet(swigCPtr, this);
  }

  public final static class Type {
    public final static Type INVALID = new Type("INVALID");
    public final static Type INT = new Type("INT");
    public final static Type DOUBLE = new Type("DOUBLE");
    public final static Type STRING = new Type("STRING");
    public final static Type BOOL = new Type("BOOL");
    public final static Type FUNCTOR = new Type("FUNCTOR");
    public final static Type DESCRIPTION_HOLDER = new Type("DESCRIPTION_HOLDER");
    public final static Type STRING_HOLDER = new Type("STRING_HOLDER");
    public final static Type SEPARATOR = new Type("SEPARATOR");
    public final static Type LAST_TYPE = new Type("LAST_TYPE", AriaJavaJNI.ArConfigArg_LAST_TYPE_get());

    public final int swigValue() {
      return swigValue;
    }

    public String toString() {
      return swigName;
    }

    public static Type swigToEnum(int swigValue) {
      if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
        return swigValues[swigValue];
      for (int i = 0; i < swigValues.length; i++)
        if (swigValues[i].swigValue == swigValue)
          return swigValues[i];
      throw new IllegalArgumentException("No enum " + Type.class + " with value " + swigValue);
    }

    private Type(String swigName) {
      this.swigName = swigName;
      this.swigValue = swigNext++;
    }

    private Type(String swigName, int swigValue) {
      this.swigName = swigName;
      this.swigValue = swigValue;
      swigNext = swigValue+1;
    }

    private Type(String swigName, Type swigEnum) {
      this.swigName = swigName;
      this.swigValue = swigEnum.swigValue;
      swigNext = this.swigValue+1;
    }

    private static Type[] swigValues = { INVALID, INT, DOUBLE, STRING, BOOL, FUNCTOR, DESCRIPTION_HOLDER, STRING_HOLDER, SEPARATOR, LAST_TYPE };
    private static int swigNext = 0;
    private final int swigValue;
    private final String swigName;
  }

  public final static int TYPE_COUNT = AriaJavaJNI.ArConfigArg_TYPE_COUNT_get();

}
